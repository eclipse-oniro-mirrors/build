# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")

taihe_copy_array = []

declare_args() {
  taihe_file_path = "$root_out_dir/taihe"
  taihe_toolchain_path = "//prebuilts/taihe/ohos/linux-x86_64/taihe"
}

template("ohos_taihe") {
  assert(defined(invoker.taihe_generated_file_path),
         "please provide taihe_generated_file_path for taihec")
  forward_variables_from(invoker, [ "taihe_generated_file_path" ])

  action(target_name) {
    script = "${taihe_toolchain_path}/bin/taihec"
    args = [
      rebase_path(
          "${taihe_toolchain_path}/lib/taihe/stdlib/taihe.platform.ani.taihe"),
      "-I",
      rebase_path("$taihe_file_path", root_build_dir),
      "-O",
      rebase_path("$taihe_generated_file_path", root_build_dir),
      "-G",
      "cpp-author",
      "ani-bridge",
    ]

    if (defined(invoker.module_prefix)) {
      args += [ "-Carkts:module-prefix=${invoker.module_prefix}" ]
    }

    if (defined(invoker.path_prefix)) {
      args += [ "-Carkts:path-prefix=${invoker.path_prefix}" ]
    }

    deps = taihe_copy_array
    if (defined(invoker.deps)) {
      deps += invoker.deps
    }

    outputs = [ "$taihe_generated_file_path/src/taihe.platform.ani.abi.c" ]
    if (defined(invoker.outputs)) {
      outputs += invoker.outputs
    }
  }
}

template("copy_taihe_idl") {
  assert(defined(invoker.sources), "please provide sources for copy")
  ohos_copy(target_name) {
    sources = invoker.sources
    outputs = [ "$taihe_file_path/{{source_file_part}}" ]
    if (defined(invoker.external_deps)) {
      external_deps = invoker.external_deps
    }
    if (defined(invoker.deps)) {
      deps = invoker.deps
    }
  }
}

template("taihe_shared_library") {
  ohos_shared_library(target_name) {
    forward_variables_from(invoker,
                           "*",
                           [
                             "sources",
                             "external_deps",
                             "include_dirs",
                           ])
    include_dirs = [
      "$taihe_generated_file_path/include",
      "$taihe_toolchain_path/include",
    ]
    if (defined(invoker.include_dirs)) {
      include_dirs += invoker.include_dirs
    }

    sources = [
      "$taihe_toolchain_path/src/taihe/runtime/object.cpp",
      "$taihe_toolchain_path/src/taihe/runtime/runtime.cpp",
      "$taihe_toolchain_path/src/taihe/runtime/string.cpp",
    ]
    sources += invoker.sources

    external_deps = [
      "runtime_core:ani",
      "runtime_core:libarkruntime",
    ]
    if (defined(invoker.external_deps)) {
      external_deps += invoker.external_deps
    }
  }
}
