{
    "product_name": {
      "argName": "--product-name",
      "argDefault": "",
      "argHelp": "build a specified product with {product_name}@{company}",
      "argPhase": "prebuild",
      "argType": "str",
      "argAttribute": {
        "abbreviation": "-p"
      },
      "resolveFuntion": "resolveProduct",
      "testFunction": "testProduct"
    },
    "target_cpu": {
      "argName": "--target-cpu",
      "argDefault": "arm",
      "argHelp": "specifies the desired cpu architecture for the build, each may support different cpu architectures, run 'hb set --all' to list product all supported cpu architectures",
      "argPhase": "prebuild",
      "argType": "str",
      "argAttribute": {
        "optional": [
          "arm",
          "arm64",
          "x86_64",
          "x64"
        ]
      },
      "resolveFuntion": "resolveTargetCpu",
      "testFunction": "testBuildTargetCpu"
    },
    "rename_last_log": {
      "argName": "--rename-last-log",
      "argDefault": true,
      "argHelp": "rename last build log",
      "argPhase": "prebuild",
      "argType": "bool",
      "argAttribute": {},
      "resolveFuntion": "resolveRenameLastLog",
      "testFunction": "testRenameLastLog"
    },
    "ccache": {
      "argName": "--ccache",
      "argDefault": false,
      "argHelp": "enable ccache, this option could improve compilation speed",
      "argPhase": "prebuild",
      "argType": "gate",
      "argAttribute": {},
      "resolveFuntion": "resolveCCache",
      "testFunction": "testCCache"
    },
    "enable_pycache": {
      "argName": "--enable-pycache",
      "argDefault": false,
      "argHelp": "enable pycache",
      "argPhase": "prebuild",
      "argType": "bool",
      "argAttribute": {},
      "resolveFuntion": "resolvePycache",
      "testFunction": "testPycache"
    },
    "disable_part_of_post_build": {
      "argName": "--disable-part-of-post-build",
      "argDefault": [],
      "argHelp": "deprecated, please do not use this option",
      "argPhase": "prebuild",
      "argType": "list",
      "argAttribute": {
        "deprecated": "true"
      },
      "resolveFuntion": "resolveDisablePartOfPostBuild",
      "testFunction": "testDisablePartOfPostBuild"
    },
    "build_type": {
      "argName": "--build-type",
      "argDefault": "release",
      "argHelp": "specifies compile release or debug version",
      "argPhase": "targetGenerate",
      "argType": "str",
      "argAttribute": {
        "optional": [
          "debug",
          "release"
        ]
      },
      "resolveFuntion": "resolveBuildType",
      "testFunction": "testBuildType"
    },
    "log_level": {
      "argName": "--log-level",
      "argDefault": "info",
      "argHelp": "specifies the log level during compilation. you can select two levels: debug, info. In debug mode, it show all command lines while building, including cxx, link, solink, etc.",
      "argPhase": "targetGenerate",
      "argType": "str",
      "argAttribute": {
        "optional": [
          "debug",
          "info"
        ]
      },
      "resolveFuntion": "resolveLogLevel",
      "testFunction": "testLogLevel"
    },
    "export_para": {
      "argName": "--export-para",
      "argDefault": [],
      "argHelp": "deprecated, please do not use this option",
      "argPhase": "targetGenerate",
      "argType": "list",
      "argAttribute": {
        "deprecated": "true"
      },
      "resolveFuntion": "resolveExportPara",
      "testFunction": "testExportPara"
    },
    "test": {
      "argName": "--test",
      "argDefault": [],
      "argHelp": "regist args to target generator",
      "argPhase": "targetGenerate",
      "argType": "list",
      "argAttribute": {},
      "resolveFuntion": "resolveTest",
      "testFunction": "testTest"
    },
    "gn_args": {
      "argName": "--gn-args",
      "argDefault": [],
      "argHelp": "specifies gn build arguments, you could use this option like this 'hb build --gn-args is_debug=true'",
      "argPhase": "targetGenerate",
      "argType": "list",
      "argAttribute": {},
      "resolveFuntion": "resolveGnArgs",
      "testFunction": "testGnArgs"
    },
    "compiler": {
      "argName": "--compiler",
      "argDefault": "clang",
      "argHelp": "specifies compiler",
      "argPhase": "targetGenerate",
      "argType": "str",
      "argAttribute": {
        "abbreviation": "-c"
      },
      "resolveFuntion": "resolveCompiler",
      "testFunction": "testCompiler"
    },
    "strict_mode": {
      "argName": "--strict-mode",
      "argDefault": false,
      "argHelp": "check all produce of each phase to early terminates a potentially problematic compilation ",
      "argPhase": "load",
      "argType": "bool",
      "argAttribute": {},
      "resolveFuntion": "resolveStrictMode",
      "testFunction": "testStrictMode"
    },
    "scalable_build": {
      "argName": "--scalable-build",
      "argDefault": false,
      "argHelp": "select whether to read information from parts.json generate by preload",
      "argPhase": "load",
      "argType": "bool",
      "argAttribute": {},
      "resolveFuntion": "resolveScalableBuild",
      "testFunction": "testScalableBuild"
    },
    "build_platform_name": {
      "argName": "--build-platform-name",
      "argDefault": "phone",
      "argHelp": "name of the compilation platform. The current optional value is 'phone'",
      "argPhase": "load",
      "argType": "str",
      "argAttribute": {},
      "resolveFuntion": "resolveBuildPlatformName",
      "testFunction": "testBuildPlatformName"
    },
    "build_xts": {
      "argName": "--build-xts",
      "argDefault": false,
      "argHelp": "select whether to load the components included in the subsystem xts",
      "argPhase": "load",
      "argType": "bool",
      "argAttribute": {},
      "resolveFuntion": "resolveBuildXts",
      "testFunction": "testBuildXts"
    },
    "ignore_api_check": {
      "argName": "--ignore-api-check",
      "argDefault": [],
      "argHelp": "skip the check of some subsystems",
      "argPhase": "load",
      "argType": "list",
      "argAttribute": {},
      "resolveFuntion": "resolveIgnoreApiCheck",
      "testFunction": "testIgnoreApiCheck"
    },
    "load_test_config": {
      "argName": "--load-test-config",
      "argDefault": true,
      "argHelp": "select whether to load the test field in bundle.json, that is, whether to call the test case",
      "argPhase": "load",
      "argType": "bool",
      "argAttribute": {},
      "resolveFuntion": "resolveLoadTestConfig",
      "testFunction": "testLoadTestConfig"
    },
    "build_target": {
      "argName": "--build-target",
      "argDefault": [],
      "argHelp": "compile single target, you could use 'hb tool --ls' to list all build target",
      "argPhase": "prebuild",
      "argType": "list",
      "argAttribute": {
        "abbreviation": "-b"
      },
      "resolveFuntion": "resolveBuildTarget",
      "testFunction": "testBuildTarget"
    },
    "full_compilation": {
      "argName": "--full-compilation",
      "argDefault": false,
      "argHelp": "full code compilation",
      "argPhase": "prebuild",
      "argType": "bool",
      "argAttribute": {
        "abbreviation": "-f"
      },
      "resolveFuntion": "resolveFullCompilation",
      "testFunction": "testFullCompilation"
    },
    "keep_ninja_going": {
      "argName": "--keep-ninja-going",
      "argDefault": false,
      "argHelp": "keeps ninja going until 1000000 jobs fail",
      "argPhase": "targetCompilation",
      "argType": "gate",
      "argAttribute": {},
      "resolveFuntion": "resolveKeepNinjaGoing",
      "testFunction": "testKeepNinjaGoing"
    },
    "build_variant": {
      "argName": "--build-variant",
      "argDefault": "root",
      "argHelp": "specifies device operating mode",
      "argPhase": "postTargetCompilation",
      "argType": "str",
      "argAttribute": {
        "optional": [
          "user",
          "root"
        ]
      },
      "resolveFuntion": "resolveBuildVariant",
      "testFunction": "testBuildVariant"
    },
    "device_type": {
      "argName": "--device-type",
      "argDefault": "default",
      "argHelp": "specifies device type",
      "argPhase": "postTargetCompilation",
      "argType": "str",
      "argAttribute": {},
      "resolveFuntion": "resolveDeviceType",
      "testFunction": "testDeviceType"
    },
    "disable_package_image": {
      "argName": "--disable-package-image",
      "argDefault": false,
      "argHelp": "deprecated, please do not use this option",
      "argPhase": "postTargetCompilation",
      "argType": "gate",
      "argAttribute": {
        "deprecated": "true"
      },
      "resolveFuntion": "resolveDisablePackageImage",
      "testFunction": "testDisablePackageImage"
    },
    "jobs": {
      "argName": "--jobs",
      "argDefault": "",
      "argHelp": "deprecated, please do not use this option",
      "argPhase": "prebuild",
      "argType": "str",
      "argAttribute": {
        "deprecated": "true"
      },
      "resolveFuntion": "resolveJobs",
      "testFunction": "testJobs"
    },
    "fast_rebuild": {
      "argName": "--fast-rebuild",
      "argDefault": false,
      "argHelp": "it will skip prepare, preloader, gn_gen steps so we can enable it only when there is no change for gn related script",
      "argPhase": "targetGenerate",
      "argType": "gate",
      "argAttribute": {},
      "resolveFuntion": "resolveFastRebuild",
      "testFunction": "testFastRebuild"
    },
    "build_only_gn": {
      "argName": "--build-only-gn",
      "argDefault": false,
      "argHelp": "only do gn parse, donot run ninja",
      "argPhase": "targetCompilation",
      "argType": "gate",
      "argAttribute": {},
      "resolveFuntion": "resolveBuildOnlyGn",
      "testFunction": "testBuildOnlyGn"
    },
    "clean_args": {
      "argName": "--clean-args",
      "argDefault": true,
      "argHelp": "clean all args that generated by this compilation while compilation finished",
      "argPhase": "postbuild",
      "argType": "bool",
      "argAttribute": {},
      "resolveFuntion": "resolveCleanArgs",
      "testFunction": "testCleanArgs"
    },
    "archive_image": {
      "argName": "--archive-image",
      "argDefault": false,
      "argHelp": "archive image when build product complete",
      "argPhase": "postTargetCompilation",
      "argType": "gate",
      "argAttribute": {},
      "resolveFuntion": "resolveArchiveImage",
      "testFunction": "testArchiveImage"
    },
    "rom_size_statistics": {
      "argName": "--rom-size-statistics",
      "argDefault": false,
      "argHelp": "statistics on the actual rom size for each compiled component",
      "argPhase": "postTargetCompilation",
      "argType": "gate",
      "argAttribute": {},
      "resolveFuntion": "resolveRomSizeStatistics",
      "testFunction": "testRomSizeStatistics"
    }
}